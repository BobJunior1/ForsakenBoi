local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "B0bbyHub / Forsaken (BETA)",
   Icon = 99972211610543, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "B0bbyhub / Forsaken (BETA)",
   LoadingSubtitle = "Loading..",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Ignorethis"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Is Bob Cool?",
      Subtitle = "Yes or no?",
      Note = "Hint: Yes (the first letter is capital)", -- Use this to tell the user how to get a key
      FileName = "SkibdiBobbyKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Yes"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("Main", 101314838915929) -- Title, Image

local Section = Tab:CreateSection("Esp")

local Button = Tab:CreateButton({
   Name = "Esp Killer",
   Callback = function()
local Players = game.Workspace:WaitForChild("Players")
local RunService = game:GetService("RunService")

local function createOutlineESP(model, outlineColor, fillColor)
    local highlight = model:FindFirstChild("Highlight")
    if not highlight then
        highlight = Instance.new("Highlight")
        highlight.Parent = model
        highlight.Adornee = model
    end
    highlight.FillTransparency = 0.75
    highlight.FillColor = fillColor
    highlight.OutlineColor = outlineColor
    highlight.OutlineTransparency = 0
end

local function createBillboardGui(target, text, color)
    local billboardGui = target:FindFirstChildOfClass("BillboardGui")
    if not billboardGui then
        billboardGui = Instance.new("BillboardGui")
        billboardGui.Adornee = target
        billboardGui.Size = UDim2.new(0, 100, 0, 25)
        billboardGui.AlwaysOnTop = true
        billboardGui.Parent = target.Parent

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextScaled = true
        textLabel.TextColor3 = color
        textLabel.Text = text
        textLabel.Font = Enum.Font.Antique
        textLabel.Parent = billboardGui
    else
        billboardGui.TextLabel.Text = text
        billboardGui.TextLabel.TextColor3 = color
        billboardGui.TextLabel.Font = Enum.Font.Antique
    end
end

local function applyHighlighting(model)
    local humanoid = model:FindFirstChildOfClass("Humanoid")
    if humanoid and model:FindFirstChild("HumanoidRootPart") then
        createOutlineESP(model, Color3.fromRGB(128, 0, 0), Color3.fromRGB(64, 0, 0))  -- Dark red colors
        createBillboardGui(model:FindFirstChild("HumanoidRootPart"), model.Name, Color3.fromRGB(128, 0, 0))  -- Dark red color
    end
end

local function highlightKillers()
    local killersGroup = Players:FindFirstChild("Killers")
    if killersGroup then
        for _, killer in pairs(killersGroup:GetChildren()) do
            applyHighlighting(killer)
        end
    end
end

-- Initial application of highlighting to existing killers
highlightKillers()

-- Event listeners to apply/remove highlighting when killers are added or removed
Players.DescendantAdded:Connect(function(descendant)
    if descendant.Parent and descendant.Parent.Name == "Killers" then
        applyHighlighting(descendant)
    end
end)

Players.DescendantRemoving:Connect(function(descendant)
    if descendant:IsA("Model") and descendant.Name == "Killers" then
        -- Reapply highlighting when the killer reappears
        descendant.AncestryChanged:Connect(function(_, parent)
            if parent then
                applyHighlighting(descendant)
            end
        end)
    end
end)
   end,
})

local Button = Tab:CreateButton({
   Name = "Esp Generators",
   Callback = function()
   local function createOutline(item)
    local Highlight = Instance.new('Highlight')
    Highlight.Parent = item
    Highlight.Adornee = item
    Highlight.OutlineColor = Color3.new(1, 1, 1)
    Highlight.FillColor = Color3.new(0, 0, 0)
    Highlight.FillTransparency = 0.5
end
local function applyESP(item)
    if item:IsA('Model') and item.Name == 'Generator' then
        createOutline(item)
    end
end
for _, v in ipairs(game.Workspace:GetDescendants()) do
    applyESP(v)
end
game.Workspace.DescendantAdded:Connect(function(descendant)
    applyESP(descendant)
end)
game.Workspace.DescendantRemoving:Connect(function(descendant)
    if descendant:IsA('Highlight') then
        descendant:Destroy()
    end
end)
   end,
})

local Paragraph = Tab:CreateParagraph({Title = "Dear Mc.no", Content = "Your the first User of Za script, Cool Right?..      ALSO RAMADAN COMING SOON AHHHHHHHHHHHHHHHHHHHH"})
